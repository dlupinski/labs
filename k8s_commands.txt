# get current context (read from .kube/config)
kubectl config current-context

# get namespaces 
kubectl get namespaces

# get yaml manifest for a pod
kubectl get pod nginx-duane -o yaml | less

# list all pods (including IP details)
kubectl get pods -o wide
NAME          READY   STATUS    RESTARTS   AGE   IP           NODE                   NOMINATED NODE   READINESS GATES
httpd-duane   1/1     Running   0          23h   10.42.0.10   lima-rancher-desktop   <none>           <none>
nginx-duane   1/1     Running   0          23h   10.42.0.9    lima-rancher-desktop   <none>           <none>

# describe a pod
kubectl describe pod nginx-duane

# start a pod
kubectl run nginx-duane --image=nginx

# edit a pod
kubectl edit pod httpd-duane

# get just a yaml file
kubectl run nginx-yaml --image=nginx --dry-run=client -o yaml

# get the yaml and write to a file
kubectl run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml

# apply yaml file to a cluster
kubectl create -f nginx.yaml
# or
kubectl apply -f nginx.yaml

# describe it
kubectl describe pod nginx-yaml

# delete a pod
kubectl delete pod nginx-yaml

# execute a command to get "into a pod" (getting an interactive shell)
#  to control pod at os level (in this case for a pod named nginx-docs)
#  to explore file system, run os commands such as top, etc
kubectl exec -it nginx-docs -- /bin/bash

####################DEPLOYMENTS ##############################
# deployments
kubectl create deployment -h | less 

# create a deployment with three replicas
kubectl create deploy test --image=httpd --replicas=3

kubectl get deployments

# to edit a deployment (similar to kubectl edit pod)
kubectl edit deployment test

# one method to generate yaml w/o having to create the pod (w/ --dry-run)
k run duane --image=nginx --dry-run=client -o yaml

# ONE METHOD TO GENERATE YAML FOR DEPLOYMENTS
k create deploy test --image=httpd --replicas=10 --dry-run=client -o yaml > deploy.yaml

# create a deployment from a file
kubectl apply -f deploy.yaml


# replicaset - group of pods - kubernetes manages replicasets (not manually administered)
kubectl get replicaset
kubectl describe replicaset